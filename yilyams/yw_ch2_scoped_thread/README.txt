1. Флаги компилятора и зачем они нужны
Флаг	Что делает	Почему нужен в учебных примерах

-Wall	Включает «основной» набор предупреждений GCC/Clang.	Ловит очевидные ошибки: неиспользуемые переменные,
неявные преобразования и т.д.

-Wextra	Добавляет ещё более строгие предупреждения (неинициализированные поля, подозрительные сравнения …).
В embedded-коде любая мелочь важна — лучше увидеть её на этапе компиляции.


-Werror	Превращает все предупреждения в ошибки.	Заставляет держать код «чистым»; ни одного незакрытого ворнинга.


-fsanitize=thread	Подключает ThreadSanitizer — рантайм-детектор data race, двойного join,
 нарушения правил синхронизации.
 На хосте помогает мгновенно увидеть гонку или использование «висячего» потока.

 Владелец должен явно передвать поток в scoped_thread т.к. воизбежение неявных преобразований к потоку. Нужно передавать
 либо временное значение, либо через std::move т.к. копирующий коструктор и оператор присваивания удалены у std::thread

  run_leaking_thread вызывает terminate т.к. при выходе из функции поток еще выполняется,
  но самой функции уже не существует